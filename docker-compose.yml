##
#
##
name: vdb

networks:
  net:
    driver: bridge

services:

  chroma:
    image: chromadb/chroma:0.4.24
    restart: always
    ports:
      - 8000:8000
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
    volumes:
      - ${PWD}/dockerdata/chroma__data:/chroma/chroma
    networks:
      net:

  qdrant:
    image: qdrant/qdrant:v1.9.0
    restart: always
    #container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    environment:
      - QDRANT__TELEMETRY_DISABLED=TRUE
    volumes:
      - ${PWD}/dockerdata/qdrant__data:/qdrant/storage
    networks:
      net:

  pgdb:
    image: pgvector/pgvector:pg16
    restart: always
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=root
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ${PWD}/dockerdata/pgdb__data:/var/lib/postgresql/data
    ports:
      - 55432:5432
    networks:
      net:
        aliases: 
          - db

  paradedb:
    image: paradedb/paradedb:16-v0.7.0
    restart: always
    environment:
      - POSTGRESQL_USERNAME=root
      - POSTGRESQL_PASSWORD=root
      - POSTGRESQL_DATABASE=root
      - POSTGRESQL_POSTGRES_PASSWORD=root
      - PARADEDB_TELEMETRY=false
    volumes:
      - ${PWD}/dockerdata/paradedb__data:/bitnami/postgresql
    ports:
      - 54322:5432
    networks:
      net:
        aliases: 
          - pdb

  milvus:
    image: milvusdb/milvus:v2.4.1
    restart: always
    environment:
      - ETCD_USE_EMBED=true
      - ETCD_DATA_DIR=/var/lib/milvus/etcd
      - COMMON_STORAGETYPE=local
    volumes:
      - ${PWD}/dockerdata/milvus__data:/var/lib/milvus
      - ${PWD}/dockerconfigs/milvus__config/embedEtcd.yaml:/milvus/configs/embedEtcd.yaml
    ports:
      - 19530:19530 # grpc or http
      # - 9091:9091 # metric collection, kubernetes, healtchecks
      # - 2379:2379 # obsolete?
    security_opt:
      - seccomp:unconfined
    entrypoint: [ 'milvus', 'run', 'standalone' ]
    healthcheck:
      test: curl --fail http://localhost:9091/healthz || exit 1
      interval: 30s
      retries: 3
      start_period: 90s
      timeout: 20s
    networks:
      net:

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ${PWD}/dockerdata/redis__data:/data
    command: redis-server --databases 64 --save 60 1 --loglevel warning
    sysctls:
      net.core.somaxconn: 4096
    networks:
      net:

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.24.13
    ports:
      - 8088:8080
      - 50051:50051
    volumes:
      - ${PWD}/dockerdata/weaviate__data:/var/lib/weaviate
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - ENABLE_MODULES=
      # - ENABLE_MODULES=text2vec-cohere,text2vec-huggingface,text2vec-palm,text2vec-openai,generative-openai,generative-cohere,generative-palm,ref2vec-centroid,reranker-cohere,qna-openai
      - CLUSTER_HOSTNAME=node1
      - DISABLE_TELEMETRY=true
      - ASYNC_INDEXING=true
    command: [ --host, 0.0.0.0, --port, '8080', --scheme, http ]
    restart: on-failure:0

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    labels:
      co.elastic.logs/module: elasticsearch
    environment:
      - ELASTIC_PASSWORD=letmein
      - node.name=esnode01
      - cluster.name=escluster01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      # - http.host=0.0.0.0
      # - transport.host=0.0.0.0
      # - network.host=0.0.0.0
    mem_limit: 2g # 1073741824 bytes == 1g, 2147483648 bytes == 2g
    memswap_limit: 0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #   nofile:
    #     soft: 131072
    #     hard: 131072
    #   nproc:
    #     soft: -1
    #     hard: -1
    # cap_add:
    #   - IPC_LOCK
    volumes:
      - ${PWD}/dockerdata/elastic__data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: curl --silent --fail 'http://elastic:letmein@0.0.0.0:9200/_cluster/health' || exit 1
      interval: 5s
      timeout: 2s
      retries: 12
    networks:
      net:

  
###
# Administration Interfaces
###

  # for pgdb, paradedb
  adminer:
    image: adminer
    restart: always
    ports:
      - 55433:8080
    networks:
      net:

  # for milvus
  attu:
    image: zilliz/attu:v2.3.10
    restart: always
    environment:
      - MILVUS_URL=milvus:19530
      - ETCD_DATA_DIR=/var/lib/
    ports:
      - 8008:3000
    networks:
      net:

  # for redis
  rediscommander:
    image: rediscommander/redis-commander
    restart: always
    environment:
      REDIS_HOSTS: local0:redis:6379:0,local1:redis:6379:1,local2:redis:6379:2,
      HTTP_USER: root
      HTTP_PASSWORD: root
    ports:
      - 8081:8081
    networks:
      net:

  # for elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    labels:
      co.elastic.logs/module: kibana
    ports:
      - 5601:5601
    environment:
     - SERVERNAME=kibana
     - ELASTICSEARCH_HOSTS=http://elastic:9200
     - ELASTICSEARCH_USERNAME=kibana_system
     - ELASTICSEARCH_PASSWORD=letmein
     - KIBANA_PASSWORD=letmein
    mem_limit: 1g
    networks:
      net:
    depends_on:
      elastic:
        condition: service_healthy
